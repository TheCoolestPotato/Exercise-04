f <- file.choose()
d <- read_csv(f, col.names = TRUE)
d <- read.csv(f, header = TRUE)
d <- read.csv(f, TRUE)
show(d)
glimpse(d)
class(d)
d <- read.csv(f)
class(d)
d <- read.csv(f, col.names = TRUE)
d <- read.csv2(f, col.names = TRUE)
class(d)
d <- read.csv(f, col.names = TRUE)
d <- read.csv(f, header = TRUE)
class(d)
glimpse(d)
str(d)
view(d)
View(d)
gs <- d$MeanGroupSize
str(gs)
class(gs)
mean(gs, na.rm = TRUE)
sciname <- paste (d$Genus, d$Species, sep = ".")
head(sciname)
toupper(sciname)
"list_scinames" <- unique(sciname)
header(list_scinames)
head(list_scinames)
library(tidyverse)
d <- read.csv("~/Downloads/data-wrangling.csv")
fembodymass <- d$Body_mass_female_mean
brainmass <- d$Brain_Size_Species_Mean
plot(fembodymass, brainmass)
plot(log(fembodymass),log(brainmass))
clear()
f <- file.choose()
df <- read.csv(file = f, header = TRUE, stringsAsFactors = FALSE)
df
View(df)
f2 <- file.choose()
d2 <- read.delim(f2, header = TRUE, sep = "\t")
View(d2)
f3 <- file.choose()
install.packages("readxl")
library(readxl)
d3 <- read_excel(path = f3, sheet = 1, col_names = TRUE)
view(d3)
View(d3)
f <- file.choose()
d <- read.csv(f, header = TRUE)
view d
View(d)
glimpse(d)
median(d$population)
mean(d$population)
median(d$population, na.rm = TRUE)
median(d$area, na.rm = TRUE)
"density" <- (d$population/d$area)
View(density)
head(density)
d$density <- (d$population/d$area)
d$density
glimpse(d)
$glimpse(d)
summary(d)
sort(d$density)
install.packages("tidyverse", "usethis", "skimr")
library(tidyverse)
library(usethis)
library(skimr)
f1 <- file.choose(https://raw.githubusercontent.com/difiore/ada-datasets/refs/heads/main/collins-scrabble-words-2019.txt)
f2 <- file.choose(https://raw.githubusercontent.com/difiore/ada-datasets/refs/heads/main/google-10000-english-usa-no-swears.txt)
f1 <- file.choose("https://raw.githubusercontent.com/difiore/ada-datasets/refs/heads/main/collins-scrabble-words-2019.txt")
f1 <- "https://raw.githubusercontent.com/difiore/ada-datasets/refs/heads/main/collins-scrabble-words-2019.txt"
f2 <- "https://raw.githubusercontent.com/difiore/ada-datasets/refs/heads/main/google-10000-english-usa-no-swears.txt"
scrabble_list <- read.csv(f1, header = TRUE)
common_words <- read.csv(f2, header = TRUE)
str(common_words)
str(common_words$words)
valid_list <- scrabble_list$words
str(valid_list)
solution_list <- common_words$words
intersect_list <- intersection(solution_list,valid_list)
intersect_list <- intersect(solution_list,valid_list)
nchar("skibidi")
set_solution <- function(df) {solutions <- if(nchar(df)== 5}
set_solution <- function(df) {solutions <- if(nchar(df)== 5)}
set_solution <- function(df) {solutions <- if(nchar(df)== 5) return(df)}
test1 <- set_solution(solution_list)
circumference <- function(r){2*pi*r}
print(circumference(2))
set_solution <- function(df) {solutions <- if(nchar(df)== 5)}
set_solution <- function(df){solutions <- if(nchar(df)== 5)}
set_solution <- function(df){solutions <- (if(nchar(df)== 5))}
set_solution <- function(df){solutions <- if(nchar(df) == 5)}
if(nchar(solution_list)==5) x -> solutions
solutions <- if(nchar(solutionlist) == 5)
solution_list-> solutions
solutions <- if(nchar(solution_list) == 5)
solution_list-> solutions
filter(solution_list,nchar(solution_list) == 5)
sol5num <- ifelse(nchar(solution_list) == 5, TRUE, FALSE)
fol5numfilt <- filter(sol5num,== TRUE)
fol5numfilt <- filter(sol5num == "TRUE"(sol5num, na.rm = TRUE))
fol5numfilt <- filter(sol5num == "TRUE"(sol5num))
view(sol5num)
fol5numfilt <- filter(sol5num == "TRUE")
fol5numfilt <- filter(sol5num$x == "TRUE")
sol5num %>% filter(x == "TRUE")
solution_list %>% filter(nchar(solution_list) == 5)
sol_list_num <- nchar(solution_list)
sol_list_num %>% filter(==5)
sol_list_num %>% filter(sol_list_num==5)
filter(sol_list_num, x == 5)
select(sol_list_num == 5)
view(sol_list_num)
solution_list$char_num <- nchar(solution_list)
View(solution_list)
solution_list$char_num <- nchar(solution_list$)
solution_list <- intersect(solution_list,valid_list)
View(solution_list)
solution_list <- select(scrabble_list == common_words)
solution_list <- filter(scrabble_list == common_words)
solution_list <- if(common_words %in% scrabble_list)
{print("TRUE")} else{print("FALSE")}
View(common_words)
load_dictionary <- function(x){file <- x}
load_dictionary <- function(x){(file <- x), read.csv(file)}
load_dictionary <- function(x){(file <- x) read.csv(file)}
load_dictionary <- function(x){|>(file <- x) read.csv(file)}
load_dictionary <- function(x) |>{|>(file <- x) read.csv(file)}
load_dictionary <- function(x) >|
load_dictionary <- function(x) |>
library(dplyr)
load_dictionary <- function(x) |>
library(dplyr)
load_dictionary <- function(x) {}
load_dictionary <- function(x) {
filename <- x
read.csv(filename)}
scrabble_test <- load_dictionary(https://raw.githubusercontent.com/difiore/ada-datasets/refs/heads/main/collins-scrabble-words-2019.txt)
scrabble_test <- load_dictionary("https://raw.githubusercontent.com/difiore/ada-datasets/refs/heads/main/collins-scrabble-words-2019.txt")
View(scrabble_test)
valid_solutions <- intersect(solution_list,valid_list)
load_dictionary <- function(x) {
+     filename <- x
+     read.csv(filename)}
valid_list <- load_dictionary("https://raw.githubusercontent.com/difiore/ada-datasets/refs/heads/main/collins-scrabble-words-2019.txt")
load_dictionary <- function(x) {
+     filename <- x
+     read.csv(filename)}
valid_list <- load_dictionary("https://raw.githubusercontent.com/difiore/ada-datasets/refs/heads/main/collins-scrabble-words-2019.txt")
load_dictionary <- function(x) {
filename <- x
read.csv(filename)}
valid_list <- load_dictionary("https://raw.githubusercontent.com/difiore/ada-datasets/refs/heads/main/collins-scrabble-words-2019.txt")
solution_list <- load_dictionary("https://raw.githubusercontent.com/difiore/ada-datasets/refs/heads/main/google-10000-english-usa-no-swears.txt")
valid_solutions <- intersect(solution_list,valid_list)
View(valid_solutions)
mutate(valid_solutions$char_num = nchar(valid_solutions$words))
valid_solutions %>%
mutate(char_num = nchar(words))
View(valid_solutions)
valid_solutions %>%
select(valid_solutions, words)
valid_solutions %>%
mutate(char_num = nchar(words))
valid_solutions$char_num <- char_num
valid_solutions %>%
mutate(char_num = nchar(words)) %>%valid_solutions$char_num <- char_num
valid_solutions %>%
mutate(char_num = nchar(words))
valid_solutions$num_char <- char_num
valid_solutions$num
num_char <- mutate(valid_solutions,nchar() )
num_char <- mutate(valid_solutions,nchar(valid_solutions))
View(num_char)
num_char <- mutate(valid_solutions,nchar(valid_solutions$words))
valid_solutions <- mutate(valid_solutions, nchar(valid_solutions$words))
rename(valid_solutions, char_num = "nchar(valid_solutions$words)"
)
valid_solutions <- mutate(valid_solutions, rename(valid_solutions, char_num = "nchar(valid_solutions$words)")
)
five_char <- filter(valid_solutions$char_num == 5)
five_char <- filter(valid_solutions, char_num == "5")
view(five_char)
git_sitrep()
setwd("~/Exercise-04")
