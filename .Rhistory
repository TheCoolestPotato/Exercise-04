}
play_wordle <- function(v,valid_list, num_guesses=6){
print("Welcome to R Wordle! You have 6 chances to correctly guess a five-letter word. Type a five-letter word below. You will receive either 'X' meaning that letter is not in the answer, 'Z' meaning the letter is in the answer but in the wrong position, or 'O' meaning that letter is in the answer in that position. Good luck!")
answer <- pick_solution(solution_list)
evaluate_guess <- function(v){
guess <- v
guess <- toupper(guess)
guess <- str_split(guess, "", simplify = TRUE)
correct_letter <- guess %in% answer
print(correct_letter)
correct_guess <- if_else(guess == answer, "TRUE", "FALSE")
print(correct_guess)
}
guess1 <- readline("Enter your first guess: ")
evaluate_guess(guess1)
}
play_wordle()
print(answer[1])
print(answer[1,1])
View(answer)
pick_solution <- function(df){
solution_list <- df
valid_solutions <- intersect(solution_list,valid_list)
valid_solutions <- mutate(valid_solutions, nchar(valid_solutions$words))
valid_solutions <- mutate(valid_solutions, rename(valid_solutions, char_num = "nchar(valid_solutions$words)"))
five_letter_words <- filter(valid_solutions, char_num == "5")
answer <- sample(five_letter_words$words,1)
answer <- str_split(answer, "", simplify = TRUE)
print(answer)
}
answer <- pick_solution(solution_list)
print(answer[1,1])
play_wordle <- function(v,valid_list, num_guesses=6){
print("Welcome to R Wordle! You have 6 chances to correctly guess a five-letter word. Type a five-letter word below. You will receive either 'X' meaning that letter is not in the answer, 'Z' meaning the letter is in the answer but in the wrong position, or 'O' meaning that letter is in the answer in that position. Good luck!")
answer <- pick_solution(solution_list)
evaluate_guess <- function(v){
guess <- v
guess <- toupper(guess)
guess <- str_split(guess, "", simplify = TRUE)
correct_letter <- guess %in% answer
print(correct_letter)
correct_guess <- if_else(guess == answer, "TRUE", "FALSE")
print(correct_guess)
}
guess1 <- readline("Enter your first guess: ")
evaluate_guess(guess1)
}
play_wordle()
guess <- str_split("WINER", "", simplify = TRUE)
correct_guess <- case_when(guess == answer ~ "TRUE",guess != answer ~ "FALSE")
guess <- str_split("SINER", "", simplify = TRUE)
correct_guess <- case_when(guess == answer ~ "TRUE",guess != answer ~ "FALSE")
correct_guess <- case_when(guess != answer ~ "FALSE",guess == answer ~ "TRUE")
print(correct_guess)
play_wordle <- function(v,valid_list, num_guesses=6){
print("Welcome to R Wordle! You have 6 chances to correctly guess a five-letter word. Type a five-letter word below. You will receive either 'X' meaning that letter is not in the answer, 'Z' meaning the letter is in the answer but in the wrong position, or 'O' meaning that letter is in the answer in that position. Good luck!")
answer <- pick_solution(solution_list)
evaluate_guess <- function(v){
guess <- v
guess <- toupper(guess)
guess <- str_split(guess, "", simplify = TRUE)
correct_letter <- guess %in% answer
print(correct_letter)
correct_guess <- case_when(guess != answer ~ "FALSE",guess == answer ~ "TRUE")
print(correct_guess)
}
guess1 <- readline("Enter your first guess: ")
evaluate_guess(guess1)
}
play_wordle()
correct_guess <- case_when(guess == answer)
correct_guess <- case_when(guess == answer ~ "TRUE", .default = "FALSE")
correct_guess <- case_when(guess != answer ~ "FALSE", .default = "TRUE")
play_wordle <- function(v,valid_list, num_guesses=6){
print("Welcome to R Wordle! You have 6 chances to correctly guess a five-letter word. Type a five-letter word below. You will receive either 'X' meaning that letter is not in the answer, 'Z' meaning the letter is in the answer but in the wrong position, or 'O' meaning that letter is in the answer in that position. Good luck!")
answer <- pick_solution(solution_list)
evaluate_guess <- function(v){
guess <- v
guess <- toupper(guess)
guess <- str_split(guess, "", simplify = TRUE)
correct_letter <- guess %in% answer
print(correct_letter)
correct_guess <- case_when(guess != answer ~ "FALSE", .default = "TRUE")
print(correct_guess)
}
guess1 <- readline("Enter your first guess: ")
evaluate_guess(guess1)
}
play_wordle()
print(correct_guess)
evaluate_guess <- function(v){
guess <- v
guess <- toupper(guess)
guess <- str_split(guess, "", simplify = TRUE)
correct_letter <- guess %in% answer
print(correct_letter)
correct_guess <- case_when(guess != answer ~ "FALSE", .default = "TRUE")
print(correct_guess)
}
evaluate_guess("nutty")
evaluate_guess("olooe")
for(i in 1:5){
correct_guess <- case_when(guess[1,i] == answer[1,i] ~ TRUE, guess[1,i] != answer[1,i] ~ FALSE)
}
for(i in 1:5){
correct_guess <- c(case_when(guess[1,i] == answer[1,i] ~ TRUE, guess[1,i] != answer[1,i] ~ FALSE))
}
for(i in 1:5){
correct_guess[1,i] <- case_when(guess[1,i] == answer[1,i] ~ TRUE, guess[1,i] != answer[1,i] ~ FALSE)
}
correct_guess <- c("A", "B","C","D","E")
for(i in 1:5){
correct_guess[1,i] <- case_when(guess[1,i] == answer[1,i] ~ TRUE, guess[1,i] != answer[1,i] ~ FALSE)
}
for(i in 1:5){
correct_guess <- mutate(correct_guess, case_when(guess[1,i] == answer[1,i] ~ TRUE, guess[1,i] != answer[1,i] ~ FALSE))
}
remove(correct_guess)
for(i in 1:5){
correct_guess <- mutate(correct_guess, case_when(guess[1,i] == answer[1,i] ~ TRUE, guess[1,i] != answer[1,i] ~ FALSE))
}
correct_guess <- c(FALSE,FALSE,FALSE,FALSE,FALSE)
for(i in 1:5){
correct_guess <- mutate(correct_guess, case_when(guess[1,i] == answer[1,i] ~ TRUE, guess[1,i] != answer[1,i] ~ FALSE))
}
view(correct_guess)
print(correct_guess[1])
print(correct_guess[3])
for(i in 1:5){
correct_guess[i] <- case_when(guess[1,i] == answer[1,i] ~ TRUE, guess[1,i] != answer[1,i] ~ FALSE)
}
play_wordle <- function(v,valid_list, num_guesses=6){
a
?
}
play_wordle <- function(v,valid_list, num_guesses=6){
}
play_wordle <- function(v,valid_list, num_guesses=6){
print("Welcome to R Wordle! You have 6 chances to correctly guess a five-letter word. Type a five-letter word below. You will receive either 'X' meaning that letter is not in the answer, 'Z' meaning the letter is in the answer but in the wrong position, or 'O' meaning that letter is in the answer in that position. Good luck!")
answer <- pick_solution(solution_list)
evaluate_guess <- function(v){
guess <- v
guess <- toupper(guess)
guess <- str_split(guess, "", simplify = TRUE)
correct_letter <- guess %in% answer
print(correct_letter)
for(i in 1:5){
+     correct_guess[i] <- case_when(guess[1,i] == answer[1,i] ~ TRUE, guess[1,i] != answer[1,i] ~ FALSE)
print(correct_guess)
}
guess1 <- readline("Enter your first guess: ")
evaluate_guess(guess1)
}
play_wordle()
play_wordle <- function(v,valid_list, num_guesses=6){
print("Welcome to R Wordle! You have 6 chances to correctly guess a five-letter word. Type a five-letter word below. You will receive either 'X' meaning that letter is not in the answer, 'Z' meaning the letter is in the answer but in the wrong position, or 'O' meaning that letter is in the answer in that position. Good luck!")
answer <- pick_solution(solution_list)
evaluate_guess <- function(v){
guess <- v
guess <- toupper(guess)
guess <- str_split(guess, "", simplify = TRUE)
correct_letter <- guess %in% answer
print(correct_letter)
for(i in 1:5){
correct_guess[i] <- case_when(guess[1,i] == answer[1,i] ~ TRUE, guess[1,i] != answer[1,i] ~ FALSE)
print(correct_guess)
}
guess1 <- readline("Enter your first guess: ")
evaluate_guess(guess1)
}
play_wordle()
play_wordle <- function(v,valid_list, num_guesses=6){
print("Welcome to R Wordle! You have 6 chances to correctly guess a five-letter word. Type a five-letter word below. You will receive either 'X' meaning that letter is not in the answer, 'Z' meaning the letter is in the answer but in the wrong position, or 'O' meaning that letter is in the answer in that position. Good luck!")
answer <- pick_solution(solution_list)
evaluate_guess <- function(v){
guess <- v
guess <- toupper(guess)
guess <- str_split(guess, "", simplify = TRUE)
correct_letter <- guess %in% answer
print(correct_letter)
for(i in 1:5){
correct_guess[i] <- case_when(guess[1,i] == answer[1,i] ~ TRUE, guess[1,i] != answer[1,i] ~ FALSE)
}
guess1 <- readline("Enter your first guess: ")
evaluate_guess(guess1)
}
play_wordle()
play_wordle <- function(v,valid_list, num_guesses=6){
print("Welcome to R Wordle! You have 6 chances to correctly guess a five-letter word. Type a five-letter word below. You will receive either 'X' meaning that letter is not in the answer, 'Z' meaning the letter is in the answer but in the wrong position, or 'O' meaning that letter is in the answer in that position. Good luck!")
answer <- pick_solution(solution_list)
evaluate_guess <- function(v){
guess <- v
guess <- toupper(guess)
guess <- str_split(guess, "", simplify = TRUE)
correct_letter <- guess %in% answer
print(correct_letter)
for(i in 1:5){
correct_guess[i] <- case_when(guess[1,i] == answer[1,i] ~ TRUE, guess[1,i] != answer[1,i] ~ FALSE)
}
print(correct_guess)
}
guess1 <- readline("Enter your first guess: ")
evaluate_guess(guess1)
}
play_wordle()
play_wordle <- function(v,valid_list, num_guesses=6){
print("Welcome to R Wordle! You have 6 chances to correctly guess a five-letter word. Type a five-letter word below. You will receive either 'X' meaning that letter is not in the answer, 'Z' meaning the letter is in the answer but in the wrong position, or 'O' meaning that letter is in the answer in that position. Good luck!")
answer <- pick_solution(solution_list)
evaluate_guess <- function(v){
guess <- v
guess <- toupper(guess)
guess <- str_split(guess, "", simplify = TRUE)
correct_letter <- guess %in% answer
for(i in 1:5){
correct_guess[i] <- case_when(guess[1,i] == answer[1,i] ~ TRUE, guess[1,i] != answer[1,i] ~ FALSE)
}
for(i in 1:5){
display_guess [i] <- case_when(correct_guess[1,i] == TRUE ~ "O", correct_letter[1,i] == TRUE ~ "Z", .default = "X")
}
print(display_guess)
}
guess1 <- readline("Enter your first guess: ")
evaluate_guess(guess1)
}
play_wordle()
play_wordle <- function(v,valid_list, num_guesses=6){
print("Welcome to R Wordle! You have 6 chances to correctly guess a five-letter word. Type a five-letter word below. You will receive either 'X' meaning that letter is not in the answer, 'Z' meaning the letter is in the answer but in the wrong position, or 'O' meaning that letter is in the answer in that position. Good luck!")
answer <- pick_solution(solution_list)
evaluate_guess <- function(v){
guess <- v
guess <- toupper(guess)
guess <- str_split(guess, "", simplify = TRUE)
correct_letter <- guess %in% answer
for(i in 1:5){
correct_guess[i] <- case_when(guess[1,i] == answer[1,i] ~ TRUE, guess[1,i] != answer[1,i] ~ FALSE)
}
for(i in 1:5){
display_guess [i] <- case_when(correct_guess[i] == TRUE ~ "O", correct_letter[1,i] == TRUE ~ "Z", .default = "X")
}
print(display_guess)
}
guess1 <- readline("Enter your first guess: ")
evaluate_guess(guess1)
}
play_wordle()
play_wordle <- function(v,valid_list, num_guesses=6){
print("Welcome to R Wordle! You have 6 chances to correctly guess a five-letter word. Type a five-letter word below. You will receive either 'X' meaning that letter is not in the answer, 'Z' meaning the letter is in the answer but in the wrong position, or 'O' meaning that letter is in the answer in that position. Good luck!")
answer <- pick_solution(solution_list)
evaluate_guess <- function(v){
guess <- v
guess <- toupper(guess)
guess <- str_split(guess, "", simplify = TRUE)
correct_letter <- guess %in% answer
for(i in 1:5){
correct_guess[i] <- case_when(guess[1,i] == answer[1,i] ~ TRUE, guess[1,i] != answer[1,i] ~ FALSE)
}
for(i in 1:5){
display_guess [i] <- case_when(correct_guess[i] == TRUE ~ "O", correct_letter[i] == TRUE ~ "Z", .default = "X")
}
print(display_guess)
}
guess1 <- readline("Enter your first guess: ")
evaluate_guess(guess1)
}
play_wordle()
play_wordle <- function(v,valid_list, num_guesses=6){
print("Welcome to R Wordle! You have 6 chances to correctly guess a five-letter word. Type a five-letter word below. You will receive either 'X' meaning that letter is not in the answer, 'Z' meaning the letter is in the answer but in the wrong position, or 'O' meaning that letter is in the answer in that position. Good luck!")
answer <- pick_solution(solution_list)
evaluate_guess <- function(v){
guess <- v
guess <- toupper(guess)
guess <- str_split(guess, "", simplify = TRUE)
correct_letter <- guess %in% answer
for(i in 1:5){
correct_guess[i] <- case_when(guess[1,i] == answer[1,i] ~ TRUE, guess[1,i] != answer[1,i] ~ FALSE)
}
for(i in 1:5){
display_guess[i] <- case_when(correct_guess[i] == TRUE ~ "O", correct_letter[i] == TRUE ~ "Z", .default = "X")
}
print(display_guess)
}
guess1 <- readline("Enter your first guess: ")
evaluate_guess(guess1)
}
play_wordle()
evaluate_guess <- function(v){
guess <- v
guess <- toupper(guess)
guess <- str_split(guess, "", simplify = TRUE)
correct_letter <- guess %in% answer
for(i in 1:5){
correct_guess[i] <- case_when(guess[1,i] == answer[1,i] ~ TRUE, guess[1,i] != answer[1,i] ~ FALSE)
}
for(i in 1:5){
display_guess[i] <- case_when(correct_guess[i] == TRUE ~ "O", correct_letter[i] == TRUE ~ "Z", .default = "X")
}
print(display_guess)
}
evaluate_guess(oaolo)
evaluate_guess("oaolo")
play_wordle <- function(v,valid_list, num_guesses=6){
print("Welcome to R Wordle! You have 6 chances to correctly guess a five-letter word. Type a five-letter word below. You will receive either 'X' meaning that letter is not in the answer, 'Z' meaning the letter is in the answer but in the wrong position, or 'O' meaning that letter is in the answer in that position. Good luck!")
answer <- pick_solution(solution_list)
evaluate_guess <- function(v){
guess <- v
guess <- toupper(guess)
guess <- str_split(guess, "", simplify = TRUE)
correct_letter <- guess %in% answer
correct_guess <- c[FALSE,FALSE,FALSE,FALSE,FALSE]
display_guess <- c[FALSE,FALSE,FALSE,FALSE,FALSE]
for(i in 1:5){
correct_guess[i] <- case_when(guess[1,i] == answer[1,i] ~ TRUE, guess[1,i] != answer[1,i] ~ FALSE)
}
for(i in 1:5){
display_guess[i] <- case_when(correct_guess[i] == TRUE ~ "O", correct_letter[i] == TRUE ~ "Z", .default = "X")
}
print(display_guess)
}
guess1 <- readline("Enter your first guess: ")
evaluate_guess(guess1)
}
play_wordle()
correct_guess <- c[FALSE,FALSE,FALSE,FALSE,FALSE]
correct_guess <- vector()[FALSE,FALSE,FALSE,FALSE,FALSE]
correct_guess <- vector(1,5)[FALSE,FALSE,FALSE,FALSE,FALSE]
correct_guess <- vector(5)[FALSE,FALSE,FALSE,FALSE,FALSE]
display_guess <- logical(length = 5L)
play_wordle <- function(v,valid_list, num_guesses=6){
print("Welcome to R Wordle! You have 6 chances to correctly guess a five-letter word. Type a five-letter word below. You will receive either 'X' meaning that letter is not in the answer, 'Z' meaning the letter is in the answer but in the wrong position, or 'O' meaning that letter is in the answer in that position. Good luck!")
answer <- pick_solution(solution_list)
evaluate_guess <- function(v){
guess <- v
guess <- toupper(guess)
guess <- str_split(guess, "", simplify = TRUE)
correct_letter <- guess %in% answer
correct_guess <- logical(length = 5L)
display_guess <- logical(length = 5L)
for(i in 1:5){
correct_guess[i] <- case_when(guess[1,i] == answer[1,i] ~ TRUE, guess[1,i] != answer[1,i] ~ FALSE)
}
for(i in 1:5){
display_guess[i] <- case_when(correct_guess[i] == TRUE ~ "O", correct_letter[i] == TRUE ~ "Z", .default = "X")
}
print(display_guess)
}
guess1 <- readline("Enter your first guess: ")
evaluate_guess(guess1)
}
play_wordle()
play_wordle <- function(v,valid_list, num_guesses=6){
}
play_wordle <- function(v,valid_list, num_guesses=6){
}
play_wordle <- function(v,valid_list, num_guesses=6){
print("Welcome to R Wordle! You have 6 chances to correctly guess a five-letter word. Type a five-letter word below. You will receive either 'X' meaning that letter is not in the answer, 'Z' meaning the letter is in the answer but in the wrong position, or 'O' meaning that letter is in the answer in that position. Good luck!")
answer <- pick_solution(solution_list)
evaluate_guess <- function(v){
guess <- v
guess <- toupper(guess)
guess <- str_split(guess, "", simplify = TRUE)
correct_letter <- guess %in% answer
correct_guess <- logical(length = 5L)
display_guess <- logical(length = 5L)
for(i in 1:5){
correct_guess[i] <- case_when(guess[1,i] == answer[1,i] ~ TRUE, guess[1,i] != answer[1,i] ~ FALSE)
}
for(i in 1:5){
display_guess[i] <- case_when(correct_guess[i] == TRUE ~ "O", correct_letter[i] == TRUE ~ "Z", .default = "X")
}
case_when(all(display_guess == "O") ~ print("Winner winner chicken dinner!"), .default = print(display_guess))
}
guess1 <- readline("Enter your first guess: ")
evaluate_guess(guess1)
}
play_wordle()
rlang::last_trace()
if_else(all(display_guess == "O"),print("Winner winner chicken dinner!"),print(display_guess))
display_guess <- c("X","X","X","X","X")
if_else(all(display_guess == "O"),print("Winner winner chicken dinner!"),print(display_guess))
case_when(all(display_guess == "O") ~ print("Winner winner chicken dinner!"), all(display_guess != "O") ~ print(display_guess))
case_when(all(display_guess[1:5] == "O") ~ print("Winner winner chicken dinner!"), all(display_guess[1:5] != "O") ~ print(display_guess))
print(display_guess[1])
print(display_guess[1:5])
if_else(all(display_guess == "O"),print("Winner winner chicken dinner!"),print(display_guess))
ifelse(all(display_guess == "O"),print("Winner winner chicken dinner!"),print(display_guess))
play_wordle <- function(v,valid_list, num_guesses=6){
print("Welcome to R Wordle! You have 6 chances to correctly guess a five-letter word. Type a five-letter word below. You will receive either 'X' meaning that letter is not in the answer, 'Z' meaning the letter is in the answer but in the wrong position, or 'O' meaning that letter is in the answer in that position. Good luck!")
answer <- pick_solution(solution_list)
evaluate_guess <- function(v){
guess <- v
guess <- toupper(guess)
guess <- str_split(guess, "", simplify = TRUE)
correct_letter <- guess %in% answer
correct_guess <- logical(length = 5L)
display_guess <- logical(length = 5L)
for(i in 1:5){
correct_guess[i] <- case_when(guess[1,i] == answer[1,i] ~ TRUE, guess[1,i] != answer[1,i] ~ FALSE)
}
for(i in 1:5){
display_guess[i] <- case_when(correct_guess[i] == TRUE ~ "O", correct_letter[i] == TRUE ~ "Z", .default = "X")
}
ifelse(all(display_guess == "O"),print("Winner winner chicken dinner!"),print(display_guess))
}
guess1 <- readline("Enter your first guess: ")
evaluate_guess(guess1)
}
play_wordle()
play_wordle <- function(v,valid_list, num_guesses=6){
print("Welcome to R Wordle! You have 6 chances to correctly guess a five-letter word. Type a five-letter word below. You will receive either 'X' meaning that letter is not in the answer, 'Z' meaning the letter is in the answer but in the wrong position, or 'O' meaning that letter is in the answer in that position. Good luck!")
answer <- pick_solution(solution_list)
evaluate_guess <- function(v){
guess <- v
guess <- toupper(guess)
guess <- str_split(guess, "", simplify = TRUE)
correct_letter <- guess %in% answer
correct_guess <- logical(length = 5L)
display_guess <- logical(length = 5L)
for(i in 1:5){
correct_guess[i] <- case_when(guess[1,i] == answer[1,i] ~ TRUE, guess[1,i] != answer[1,i] ~ FALSE)
}
for(i in 1:5){
display_guess[i] <- case_when(correct_guess[i] == TRUE ~ "O", correct_letter[i] == TRUE ~ "Z", .default = "X")
}
ifelse(all(display_guess == "O"),print("Winner winner chicken dinner!"),print(display_guess))
}
guess1 <- readline("Enter your first guess: ")
evaluate_guess(guess1)
guess2 <- readline("Enter your second guess (5 remaining): ")
evaluate_guess(guess2)
}
play_wordle()
play_wordle <- function(v,valid_list, num_guesses=6){
print("Welcome to R Wordle! You have 6 chances to correctly guess a five-letter word. Type a five-letter word below. You will receive either 'X' meaning that letter is not in the answer, 'Z' meaning the letter is in the answer but in the wrong position, or 'O' meaning that letter is in the answer in that position. Good luck!")
answer <- pick_solution(solution_list)
evaluate_guess <- function(v){
guess <- v
guess <- toupper(guess)
guess <- str_split(guess, "", simplify = TRUE)
correct_letter <- guess %in% answer
correct_guess <- logical(length = 5L)
display_guess <- logical(length = 5L)
for(i in 1:5){
correct_guess[i] <- case_when(guess[1,i] == answer[1,i] ~ TRUE, guess[1,i] != answer[1,i] ~ FALSE)
}
for(i in 1:5){
display_guess[i] <- case_when(correct_guess[i] == TRUE ~ "O", correct_letter[i] == TRUE ~ "Z", .default = "X")
}
ifelse(all(display_guess == "O"),print("Winner winner chicken dinner!"),print(display_guess))
}
guess1 <- readline("Enter your first guess: ")
evaluate_guess(guess1)
guess2 <- readline("Enter your second guess (5 remaining): ")
evaluate_guess(guess2)
guess3 <- readline("Enter your third guess (4 remaining): ")
evaluate_guess(guess3)
guess4 <- readline("Enter your fourth guess (3 remaining): ")
evaluate_guess(guess4)
guess5 <- readline("Enter your fifth guess (2 remaining): ")
evaluate_guess(guess5)
guess6 <- readline("Enter your last guess (1 remaining): ")
evaluate_guess(guess6)
}
play_wordle()
play_wordle <- function(v,valid_list, num_guesses=6){
library(tidyverse)
library(usethis)
library(dplyr)
load_dictionary <- function(x) {
filename <- x
read.csv(filename)}
valid_list <- load_dictionary("https://raw.githubusercontent.com/difiore/ada-datasets/refs/heads/main/collins-scrabble-words-2019.txt")
solution_list <- load_dictionary("https://raw.githubusercontent.com/difiore/ada-datasets/refs/heads/main/google-10000-english-usa-no-swears.txt")
pick_solution <- function(df){
solution_list <- df
valid_solutions <- intersect(solution_list,valid_list)
valid_solutions <- mutate(valid_solutions, nchar(valid_solutions$words))
valid_solutions <- mutate(valid_solutions, rename(valid_solutions, char_num = "nchar(valid_solutions$words)"))
five_letter_words <- filter(valid_solutions, char_num == "5")
answer <- sample(five_letter_words$words,1)
answer <- str_split(answer, "", simplify = TRUE)
}
print("Welcome to R Wordle! You have 6 chances to correctly guess a five-letter word. Type a five-letter word below. You will receive either 'X' meaning that letter is not in the answer, 'Z' meaning the letter is in the answer but in the wrong position, or 'O' meaning that letter is in the answer in that position. Good luck!")
answer <- pick_solution(solution_list)
evaluate_guess <- function(v){
guess <- v
guess <- toupper(guess)
guess <- str_split(guess, "", simplify = TRUE)
correct_letter <- guess %in% answer
correct_guess <- logical(length = 5L)
display_guess <- logical(length = 5L)
for(i in 1:5){
correct_guess[i] <- case_when(guess[1,i] == answer[1,i] ~ TRUE, guess[1,i] != answer[1,i] ~ FALSE)
}
for(i in 1:5){
display_guess[i] <- case_when(correct_guess[i] == TRUE ~ "O", correct_letter[i] == TRUE ~ "Z", .default = "X")
}
ifelse(all(display_guess == "O"),print("Winner winner chicken dinner!"),print(display_guess))
}
guess1 <- readline("Enter your first guess: ")
evaluate_guess(guess1)
guess2 <- readline("Enter your second guess (5 remaining): ")
evaluate_guess(guess2)
guess3 <- readline("Enter your third guess (4 remaining): ")
evaluate_guess(guess3)
guess4 <- readline("Enter your fourth guess (3 remaining): ")
evaluate_guess(guess4)
guess5 <- readline("Enter your fifth guess (2 remaining): ")
evaluate_guess(guess5)
guess6 <- readline("Enter your last guess (1 remaining): ")
evaluate_guess(guess6)
}
play_wordle()
